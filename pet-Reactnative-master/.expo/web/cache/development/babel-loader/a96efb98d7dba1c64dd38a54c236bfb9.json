{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/lorenzo/Desktop/pet-Reactnative-master/Screens/LoginCard.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Input, Button } from \"react-native-elements\";\nimport { auth } from \"../firebase\";\n\nvar LoginCard = function LoginCard(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var signIn = function signIn() {\n    auth.signInWithEmailAndPassword(email, password).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      alert(errorMessage);\n    });\n  };\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.replace(\"Landing\");\n      } else {}\n    });\n    return unsubscribe;\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, {\n    placeholder: \"enter your email\",\n    label: \"email\",\n    leftIcon: {\n      type: \"material\",\n      name: \"email\"\n    },\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"enter your password\",\n    label: \"password\",\n    leftIcon: {\n      type: \"material\",\n      name: \"lock\"\n    },\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"sign in\",\n    style: styles.button,\n    containerStyle: {\n      width: 200,\n      marginTop: 10\n    },\n    onPress: signIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"register\",\n    style: styles.button,\n    containerStyle: {\n      width: 200,\n      marginTop: 10\n    },\n    onPress: function onPress() {\n      navigation.navigate(\"Register\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default LoginCard;\nvar styles = StyleSheet.create({\n  button: {\n    width: 200,\n    marginTop: 10,\n    backgroundColor: \"#333\"\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/home/lorenzo/Desktop/pet-Reactnative-master/Screens/LoginCard.js"],"names":["React","useState","useEffect","Input","Button","auth","LoginCard","navigation","email","setEmail","password","setPassword","signIn","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","alert","unsubscribe","onAuthStateChanged","user","replace","styles","container","type","name","text","button","width","marginTop","navigate","StyleSheet","create","backgroundColor","flex","alignItems","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { Input, Button } from \"react-native-elements\";\nimport { auth } from \"../firebase\";\n\n// authenticatore\nconst LoginCard = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const signIn = () => {\n    auth\n      .signInWithEmailAndPassword(email, password)\n\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        alert(errorMessage);\n      });\n  };\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.replace(\"Landing\");\n      } else {\n        // No user is signed in.\n      }\n    });\n    return unsubscribe;\n  });\n  return (\n    <View style={styles.container}>\n      <Input\n        placeholder=\"enter your email\"\n        label=\"email\"\n        leftIcon={{ type: \"material\", name: \"email\" }}\n        value={email}\n        onChangeText={(text) => setEmail(text)}\n      />\n\n      <Input\n        placeholder=\"enter your password\"\n        label=\"password\"\n        leftIcon={{ type: \"material\", name: \"lock\" }}\n        value={password}\n        onChangeText={(text) => setPassword(text)}\n        secureTextEntry\n      />\n      <Button\n        title=\"sign in\"\n        style={styles.button}\n        containerStyle={{ width: 200, marginTop: 10 }}\n        onPress={signIn}\n      />\n      <Button\n        title=\"register\"\n        style={styles.button}\n        containerStyle={{ width: 200, marginTop: 10 }}\n        onPress={() => {\n          navigation.navigate(\"Register\");\n        }}\n      />\n    </View>\n  );\n};\n\nexport default LoginCard;\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 200,\n    marginTop: 10,\n    backgroundColor: \"#333\",\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}