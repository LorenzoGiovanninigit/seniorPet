{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firebase-auth\";\nimport \"firebase/functions\";\nimport \"@firebase/firestore\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDCbgDT4Vi7e5irCCislLuSYYmZ54rDsdc\",\n  authDomain: \"abivet-pets.firebaseapp.com\",\n  projectId: \"abivet-pets\",\n  storageBucket: \"abivet-pets.appspot.com\",\n  messagingSenderId: \"1002031804070\",\n  appId: \"1:1002031804070:web:f270ae328bf91bb1b7ce67\",\n  measurementId: \"G-Y14YNPYR6S\"\n};\nvar app;\n\nif (firebase.apps.length === 0) {\n  app = firebase.initializeApp(firebaseConfig);\n} else {\n  app = firebase.app();\n}\n\nvar db = app.firestore();\nvar auth = firebase.auth();\nexport var firestore = firebase.firestore();\nexport var functions = firebase.functions();\nvar sendEmail = functions.httpsCallable(\"sendEmail\");\nexport { db, auth, sendEmail };\nexport var generateUserDocument = function generateUserDocument(user, displayName, cell, telephone, address, age, photoURL) {\n  var userRef, snapshot, email, uid, emailVerified;\n  return _regeneratorRuntime.async(function generateUserDocument$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (user) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 2:\n          userRef = firestore.doc(\"users/\" + user.uid);\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(userRef.get());\n\n        case 5:\n          snapshot = _context.sent;\n\n          if (snapshot.exists) {\n            _context.next = 16;\n            break;\n          }\n\n          email = user.email, uid = user.uid, emailVerified = user.emailVerified;\n          _context.prev = 8;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(userRef.set({\n            displayName: displayName,\n            email: email,\n            uid: uid,\n            emailVerified: emailVerified,\n            created: firebase.firestore.Timestamp.fromDate(new Date()),\n            photoURL: photoURL,\n            cell: cell,\n            telephone: telephone,\n            address: address,\n            age: age\n          }));\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](8);\n          console.error(\"Error creating user document\", _context.t0);\n\n        case 16:\n          return _context.abrupt(\"return\", getUserDocument(user.uid));\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[8, 13]], Promise);\n};\nexport var getUserDocument = function getUserDocument(uid) {\n  var userDocument;\n  return _regeneratorRuntime.async(function getUserDocument$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (uid) {\n            _context2.next = 2;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", null);\n\n        case 2:\n          _context2.prev = 2;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(firestore.doc(\"users/\" + uid).get());\n\n        case 5:\n          userDocument = _context2.sent;\n          return _context2.abrupt(\"return\", _objectSpread({\n            uid: uid\n          }, userDocument.data()));\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](2);\n          console.error(\"Error fetching user\", _context2.t0);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[2, 9]], Promise);\n};\nexport var getPets = function getPets(uid) {\n  var pets, petsRef, snapshot;\n  return _regeneratorRuntime.async(function getPets$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (uid) {\n            _context3.next = 2;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", null);\n\n        case 2:\n          _context3.prev = 2;\n          pets = [];\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(firestore.collection(\"pets\").where(\"uid\", \"==\", uid));\n\n        case 6:\n          petsRef = _context3.sent;\n          _context3.next = 9;\n          return _regeneratorRuntime.awrap(petsRef.get());\n\n        case 9:\n          snapshot = _context3.sent;\n\n          if (!snapshot.size) {\n            _context3.next = 17;\n            break;\n          }\n\n          console.log(\"pets find case +++\");\n          _context3.next = 14;\n          return _regeneratorRuntime.awrap(snapshot.forEach(function (doc) {\n            var data = doc.data();\n            data.id = doc.id;\n            pets.push(data);\n          }));\n\n        case 14:\n          return _context3.abrupt(\"return\", pets);\n\n        case 17:\n          console.log(\"pets not found case +++\");\n          return _context3.abrupt(\"return\", pets);\n\n        case 19:\n          _context3.next = 26;\n          break;\n\n        case 21:\n          _context3.prev = 21;\n          _context3.t0 = _context3[\"catch\"](2);\n          console.error(\"Error fetching user\", _context3.t0);\n          alert(\"get pets data error: \" + _context3.t0);\n          return _context3.abrupt(\"return\", _context3.t0);\n\n        case 26:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[2, 21]], Promise);\n};\nexport var deletePet = function deletePet(id) {\n  var ref;\n  return _regeneratorRuntime.async(function deletePet$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (id) {\n            _context4.next = 2;\n            break;\n          }\n\n          return _context4.abrupt(\"return\");\n\n        case 2:\n          ref = firestore.collection(\"pets\");\n          console.log(\"id\", id);\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(ref.doc(id).delete());\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/lorenzo/Desktop/pet-Reactnative-master/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","apps","length","initializeApp","db","firestore","auth","functions","sendEmail","httpsCallable","generateUserDocument","user","displayName","cell","telephone","address","age","photoURL","userRef","doc","uid","get","snapshot","exists","email","emailVerified","set","created","Timestamp","fromDate","Date","console","error","getUserDocument","userDocument","data","getPets","pets","collection","where","petsRef","size","log","forEach","id","push","alert","deletePet","ref","delete"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firebase-auth\";\nimport \"firebase/functions\";\nimport \"@firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDCbgDT4Vi7e5irCCislLuSYYmZ54rDsdc\",\n  authDomain: \"abivet-pets.firebaseapp.com\",\n  projectId: \"abivet-pets\",\n  storageBucket: \"abivet-pets.appspot.com\",\n  messagingSenderId: \"1002031804070\",\n  appId: \"1:1002031804070:web:f270ae328bf91bb1b7ce67\",\n  measurementId: \"G-Y14YNPYR6S\",\n};\n\nlet app;\nif (firebase.apps.length === 0) {\n  app = firebase.initializeApp(firebaseConfig);\n} else {\n  app = firebase.app();\n}\nconst db = app.firestore();\nconst auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const functions = firebase.functions();\n\nconst sendEmail = functions.httpsCallable(\"sendEmail\");\nexport { db, auth, sendEmail };\n\nexport const generateUserDocument = async (\n  user,\n  displayName,\n  cell,\n  telephone,\n  address,\n  age,\n  photoURL\n) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n  if (!snapshot.exists) {\n    const { email, uid, emailVerified } = user;\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        uid,\n        emailVerified,\n        created: firebase.firestore.Timestamp.fromDate(new Date()),\n        photoURL,\n        cell,\n        telephone,\n        address,\n        age,\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n  return getUserDocument(user.uid);\n};\n\nexport const getUserDocument = async (uid) => {\n  if (!uid) return null;\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data(),\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};\n\nexport const getPets = async (uid) => {\n  if (!uid) return null;\n  try {\n    const pets = [];\n    const petsRef = await firestore.collection(\"pets\").where(\"uid\", \"==\", uid);\n    const snapshot = await petsRef.get();\n\n    if (snapshot.size) {\n      console.log(\"pets find case +++\");\n      await snapshot.forEach((doc) => {\n        // console.log(\"pets find case +++ id => \", doc.id, \" => data => \", doc.data());\n        var data = doc.data();\n        data.id = doc.id;\n        pets.push(data);\n      });\n      return pets;\n    } else {\n      console.log(\"pets not found case +++\");\n      return pets;\n    }\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n    alert(\"get pets data error: \" + error);\n    return error;\n  }\n};\n\nexport const deletePet = async (id) => {\n  if (!id) return;\n\n  const ref = firestore.collection(\"pets\");\n\n  console.log(\"id\", id);\n\n  await ref.doc(id).delete();\n};\n"]},"metadata":{},"sourceType":"module"}